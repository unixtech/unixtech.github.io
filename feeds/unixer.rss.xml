<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UnixTech</title><link>http://unixtech.github.io/</link><description>Technology, Creativity, Business - Amplified</description><atom:link href="http://unixtech.github.io/feeds/unixer.rss.xml" rel="self"></atom:link><lastBuildDate>Sat, 06 Dec 2014 13:30:00 +0530</lastBuildDate><item><title>PF Firewall-1</title><link>http://unixtech.github.io/12-2014/pf-firewall-1.html</link><description>&lt;h2&gt;FreeBSD and OpenBSD&lt;/h2&gt;
&lt;p&gt;PF (Packet filter) is default firewall for OpenBSD and included in other OS's like &lt;a href="http://www.freebsd.org"&gt;FreeBSD&lt;/a&gt; and &lt;a href="http://www.apple.com" title="Apple"&gt;Apple&lt;/a&gt; IOS operating systems. Many other "Commercial firewall" appliances are inspired by PF.&lt;/p&gt;
&lt;h2&gt;History of PF&lt;/h2&gt;
&lt;p&gt;PF was originally designed as replacement for Darren Reed's IPFilter, from which it derives much of its rule syntax. IPFilter was removed from OpenBSD's CVS tree due to OpenBSD developers' problems with its license. Specifically, Reed distributed some versions of his software with the license clause, "Derivative or modified works are not permitted without the author's prior consent." Due to this, the OpenBSD team decided to replace the software. This decision became the subject of wrangling among the parties involved, degenerating into a discussion that failed to reach mutual understanding. On the subject, OpenBSD project leader Theo de Raadt wrote, "Software which OpenBSD uses and redistributes must be free to all... for any purpose including... modification."&lt;/p&gt;
&lt;p&gt;PF has since evolved quickly and now has several advantages over other available firewalls. Network Address Translation (NAT) and Quality of Service (QoS) have been integrated into PF, QoS by importing the ALTQ queuing software and linking it with PF's configuration. Features such as pfsync and CARP for failover and redundancy, authpf for session authentication, and ftp-proxy to ease firewalling the difficult FTP protocol, have also extended PF.&lt;/p&gt;
&lt;p&gt;One of the many innovative feature is PF's logging. Logging is configurable per rule within the pf.conf and logs are provided from PF by a pseudo-network interface called pflog. Logs may be monitored using standard utilities such as tcpdump, which in OpenBSD has been extended especially for the purpose, or saved to disk in a modified tcpdump/pcap binary format using the pflogd daemon.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For more info, &lt;strong&gt;Read  - &lt;a href="http://en.wikipedia.org/wiki/PF_%28firewall%29"&gt;History of pf&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;PF setup&lt;/h2&gt;
&lt;p&gt;Usually &lt;code&gt;PF&lt;/code&gt; is deployed  in conjuction with other tools provided by OpenBSD ecosystem.
These includes:
&lt;em&gt; HFSC Queuing system for QoS
&lt;/em&gt; FTP-Proxy
&lt;em&gt; Application proxies such as Relayd ( Mainly used as HTTPs termination point )
&lt;/em&gt; OS detection using fingerprint - &lt;code&gt;pf.os&lt;/code&gt;
* CARP firewall failover for HA environments ( UCARP for FreeBSD users )&lt;/p&gt;
&lt;h3&gt;How to deploy PF firewall in your environment&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: Both OpenBSD and FreeBSD OS uses different syntax for maintaining &lt;code&gt;PF&lt;/code&gt; firewall.
We will mainly focus on OpenBSD OS but there are benefits of using &lt;code&gt;PF&lt;/code&gt; with FreeBSD OS since it provides multi-processing capable version of &lt;code&gt;PF&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--{% include_code pf.conf [lang:sh] [pf.conf] %}--&gt;

&lt;p&gt;File - &lt;code&gt;/etc/rc.conf.local&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;YES
&lt;span class="nv"&gt;pf_rules&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/pf.conf
&lt;span class="nv"&gt;pflogd_flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-s 1500&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# Ex. Snaplen, Log filename&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;File - &lt;code&gt;/etc/pf.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;### My master pf.conf&lt;/span&gt;

&lt;span class="c1"&gt;### Interfaces&lt;/span&gt;
&lt;span class="nv"&gt;EXTIF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;em0&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;INTIF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;em1&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DMZ&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;em2&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;EXTRAIF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;em3&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;### Hosts&lt;/span&gt;
&lt;span class="nv"&gt;ADMIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.0.11.1&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;ADMIN1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;10.0.11.31&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;BOTHADMIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$AD&lt;/span&gt;MIN &lt;span class="nv"&gt;$AD&lt;/span&gt;MIN1 &lt;span class="s2"&gt;&amp;quot;}&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;EXTDNSSERVER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4.2.2.2&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;INTDNSSERVER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;$&lt;span class="s2"&gt;INTIF:0&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#DNSSERVERS =&amp;quot;{&amp;#39; $INTDNSSERVER $EXTDNSSERVER &amp;#39;}&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;DNSSERVER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{&lt;/span&gt;$&lt;span class="s2"&gt;INTDNSSERVER}&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;LOGSERVER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{ 10.0.11.22, 10.0.11.31  }&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;All these variable defined are called MACROS inside &lt;code&gt;pf.conf&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;These are used for convinience and ease of use&lt;/li&gt;
&lt;li&gt;Defining nested macros are possible as well.&lt;/li&gt;
&lt;li&gt;Take a look at &lt;code&gt;INTIF&lt;/code&gt; macro, If you want to include that whole internal network in your rules then &lt;code&gt;INTIF:network&lt;/code&gt; in your rule.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, We will have a look at some of the rules itself.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#External Interface&lt;/span&gt;
&lt;span class="c1"&gt;#Block all on External interface&lt;/span&gt;
block log on &lt;span class="nv"&gt;$E&lt;/span&gt;XTIF

&lt;span class="c1"&gt;## Network address translation with outgoing source &lt;/span&gt;
&lt;span class="c1"&gt;#match out log on $EXTIF from $INTIF to any received-on $INTIF tag EGRESS nat-to ($EXTIF:0) &lt;/span&gt;
match out log on &lt;span class="nv"&gt;$E&lt;/span&gt;XTIF from $INTIF:network to any received-on $INTIF tag EGRESS nat-to &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$E&lt;/span&gt;XTIF:0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#If you have difficulties with any box with static port forwarding then you should use&lt;/span&gt;
&lt;span class="c1"&gt;#match out log on $EXTIF from $INTIF to any received-on $INTIF tag EGRESS nat-to ($EXTIF:0) static-port&lt;/span&gt;

&lt;span class="c1"&gt;#Traffic generated from firewall it self will be tagged as EGRESS&lt;/span&gt;
match out log on &lt;span class="nv"&gt;$E&lt;/span&gt;XTIF from &lt;span class="nv"&gt;$E&lt;/span&gt;XTIF to any tag EGRESS
&lt;span class="c1"&gt;#More on these later on.&lt;/span&gt;

&lt;span class="c1"&gt;#EXTIF inbound&lt;/span&gt;
pass in log &lt;span class="o"&gt;(&lt;/span&gt;to pflog1&lt;span class="o"&gt;)&lt;/span&gt; on &lt;span class="nv"&gt;$E&lt;/span&gt;XTIF inet proto tcp from any to any port &lt;span class="m"&gt;22&lt;/span&gt; 
pass in on &lt;span class="nv"&gt;$E&lt;/span&gt;XTIF inet proto tcp from any to &lt;span class="nv"&gt;$E&lt;/span&gt;XTIF port &amp;gt;10000

&lt;span class="c1"&gt;#External interface outbound&lt;/span&gt;
pass out log on &lt;span class="nv"&gt;$E&lt;/span&gt;XTIF inet  from &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$E&lt;/span&gt;XTIF&lt;span class="o"&gt;)&lt;/span&gt; to any $TCPSTATE &lt;span class="nv"&gt;$E&lt;/span&gt;XTIFSTO queue &lt;span class="o"&gt;(&lt;/span&gt;bulk, ack&lt;span class="o"&gt;)&lt;/span&gt; tagged EGRESS
&lt;span class="c1"&gt;#pass out log on $EXTIF inet proto udp from ($EXTIF) to any $UDPSTATE $EXTIFSTO queue (bulk, ack) tagged EGRESS&lt;/span&gt;
pass out log on &lt;span class="nv"&gt;$E&lt;/span&gt;XTIF inet proto tcp from &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$E&lt;/span&gt;XTIF&lt;span class="o"&gt;)&lt;/span&gt; to any port $TCPPORTS $TCPSTATE &lt;span class="nv"&gt;$E&lt;/span&gt;XTIFSTO queue &lt;span class="o"&gt;(&lt;/span&gt;web, ack&lt;span class="o"&gt;)&lt;/span&gt; tagged EGRESS
pass out log on &lt;span class="nv"&gt;$E&lt;/span&gt;XTIF inet proto udp from &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$E&lt;/span&gt;XTIF&lt;span class="o"&gt;)&lt;/span&gt; to any port &lt;span class="m"&gt;53&lt;/span&gt; $UDPSTATE &lt;span class="nv"&gt;$E&lt;/span&gt;XTIFSTO queue &lt;span class="o"&gt;(&lt;/span&gt;dns, ack&lt;span class="o"&gt;)&lt;/span&gt; tagged EGRESS
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;These are some of the rules that I have defined in my DMZ firewall to prevent other users from coming in from outside.&lt;/li&gt;
&lt;li&gt;After deploying this ruleset only SSH is allowed from outside interface of firewall. &lt;/li&gt;
&lt;li&gt;From inside essential end-user services such as Internet browsing, DNS are enabled. &lt;/li&gt;
&lt;li&gt;Take a look at &lt;code&gt;match out&lt;/code&gt; rules on &lt;code&gt;EXTIF&lt;/code&gt; to have a look at how nat rules are working. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Turning on routing&lt;/h3&gt;
&lt;p&gt;To turn on routing functionality of the box, You need to make sure you have enabled ip forwarding in &lt;code&gt;sysctl&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# To check the ip forwarding status&lt;/span&gt;
sysctl net.inet.ip.forwarding
&lt;span class="c1"&gt;# If it&amp;#39;s 0 then turn it on&lt;/span&gt;
sysctl net.inet.ip.forwarding&lt;span class="o"&gt;=&lt;/span&gt;1

&lt;span class="c1"&gt;#To make it permanent &lt;/span&gt;
&lt;span class="c1"&gt;### /etc/sysctl.conf&lt;/span&gt;
net.inet.ip.forwarding &lt;span class="o"&gt;=&lt;/span&gt; 1
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;PFCTL utility&lt;/h3&gt;
&lt;p&gt;After making changes inside &lt;code&gt;pf.conf&lt;/code&gt; file, rules are not automatically loaded. To load the rules We need to use &lt;code&gt;pfctl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To load rules - Assuming rule file is &lt;code&gt;/etc/pf.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pfctl -vf /etc/pf.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To see which rules are currently loaded, It will also show related counters. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pfctl -vsr
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="/images/pf_rules.png" class="center" width="600"&gt;&lt;/p&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;PF is one of the most popular and powerful firewall for managing your network traffic. We have barely even scratched surface of what PF can provide. It's functionality is much more then many of the commercial offerings offers.&lt;br /&gt;
We will also cover some extended functionality such as usage of Anchors, Preventing torrent traffic, Blacklisting and preventing brute-forcing attack etc.
Being open-source it places no restrictions on usage. Users can use it any which way they would prefer.  &lt;/p&gt;
&lt;p&gt;Having  used PF and OpenBSD for nearly 10 years in all of my setups I can say PF is most secure firewall there is and With combination of OpenBSD and PF you can be pretty sure you are one step ahead then rest  in process of being NSA proof.&lt;/p&gt;
&lt;script type="text/babel"&gt;
var CommentBox = React.createClass({
  render: function() {
    return (
      &lt;div className="commentBox"&gt;
        Hello, world! I am a CommentBox.
      &lt;/div&gt;
    );
  }
});
ReactDOM.render(
  &lt;CommentBox /&gt;,
  document.getElementById('comment')
);
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unixer</dc:creator><pubDate>Sat, 06 Dec 2014 13:30:00 +0530</pubDate><guid>tag:unixtech.github.io,2014-12-04:12-2014/pf-firewall-1.html</guid><category>Unix</category><category>Firewall</category></item><item><title>Unix essentials-1 Find</title><link>http://unixtech.github.io/01-2010/practical-find.html</link><description>&lt;p&gt;The &lt;code&gt;Find&lt;/code&gt; utility in Linux is very useful in the sense that it quickly locates and searches through list of files and directories.
It can do so based on condition that you pass through arguments. 
&lt;code&gt;Find&lt;/code&gt; can find files using different conditions like:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Permissions&lt;/li&gt;
&lt;li&gt;Users&lt;/li&gt;
&lt;li&gt;Groups&lt;/li&gt;
&lt;li&gt;File type&lt;/li&gt;
&lt;li&gt;Date&lt;/li&gt;
&lt;li&gt;Size and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Basic Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Find file in current directory&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="c1"&gt;# Find by filename in Current dir&lt;/span&gt;
 find . -name unixtech.txt

 &lt;span class="c1"&gt;#Output&lt;/span&gt;
 ./unixtech.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Find file in current directory &lt;span class="fa fa-arrow-right"&gt;&lt;/span&gt; Case insensitive&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="c1"&gt;# Find by filename in Current dir&lt;/span&gt;
 find . -iname unixtech.txt

 &lt;span class="c1"&gt;#Output&lt;/span&gt;
 ./unixtech.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Recursively searching file in all in whole system&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Recurse through whole file system&lt;/span&gt;
find / -name &lt;span class="nv"&gt;$F&lt;/span&gt;ILENAME
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Find files based on permissions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Find files certain permissions&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Find only files with full 777 permissions&lt;/span&gt;
find / -perm &lt;span class="m"&gt;0777&lt;/span&gt; -print
&lt;span class="c1"&gt;# Find files with SGID bit set &lt;/span&gt;
find / -perm 2644
&lt;span class="c1"&gt;# Or&lt;/span&gt;
find / -perm /g+s
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Find all files based on user permissions&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#Find all files with READ permission&lt;/span&gt;
find / -perm /u&lt;span class="o"&gt;=&lt;/span&gt;r -print

&lt;span class="c1"&gt;# Find all files with executable bit set&lt;/span&gt;
find / -perm /a&lt;span class="o"&gt;=&lt;/span&gt;x -print
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Find can also execute command on found files based on given criterion.
In addition to just printing list of files, You can modify, change permission and also delete files using &lt;code&gt;-exec&lt;/code&gt; flag in find command.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, If you want to change all the files that have permission set to &lt;code&gt;777&lt;/code&gt; to something that only you can modify in your home directory, You may execute following variation of &lt;code&gt;find&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Find all files with &lt;code&gt;777&lt;/code&gt; permission and change it to &lt;code&gt;644&lt;/code&gt; inside your home directory&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#Find and exec &lt;/span&gt;
find ~USERNAME -perm &lt;span class="m"&gt;777&lt;/span&gt; -print -exec chmod &lt;span class="m"&gt;644&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;{}&lt;/td&gt;
&lt;td&gt;Shell expander which will put current file name from list in &lt;code&gt;-exec&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\;&lt;/td&gt;
&lt;td&gt;'\' is Shell escape and ';' is Unix chaining symbol&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Here thing to remember is You have to put {} symbol where you want INPUT filename to be, and chain it with \; symbol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Same thing if you want to remove or list files&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#List files that matches certain crieteria&lt;/span&gt;
find / -perm &lt;span class="m"&gt;777&lt;/span&gt; -print -exec ls -la &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;

&lt;span class="c1"&gt;#Removing files that matches certain crieteria&lt;/span&gt;
find / -perm &lt;span class="m"&gt;777&lt;/span&gt; -print -exec rm -rf &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Finding files based on user/group ownership&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#Find files owned by particular user&lt;/span&gt;
find / -user unixtech -print

&lt;span class="c1"&gt;#Find files owned by group&lt;/span&gt;
find / -group unixgroup -print
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Finding files based on modification/changed/accessed date time&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Find files modified 3 days back&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;find / -mtime 3
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;find all the files those are changed last hour&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#Will return all the files changed in last 60 mins&lt;/span&gt;
find / -cmin -60
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; '-' sign in front of 60 includes all the files that changed within that timeframe, Ex. It will include files that are changed 3, 5, 10 mins back and so on.
Notice different criterion for finding files such as &lt;code&gt;-mmin&lt;/code&gt;, &lt;code&gt;cmin&lt;/code&gt;, &lt;code&gt;amin&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Access time&lt;/td&gt;
&lt;td align="center"&gt;If you list/delete/open this file then &lt;code&gt;atime&lt;/code&gt; will be modified&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Changed time&lt;/td&gt;
&lt;td align="center"&gt;Modifying data of the file changes &lt;code&gt;ctime&lt;/code&gt; parameter of file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Modification time&lt;/td&gt;
&lt;td align="center"&gt;Same as Changed time but will also be changed upon changes in meta data of the file.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Use &lt;code&gt;find&lt;/code&gt; to search files based on size&lt;/h2&gt;
&lt;p&gt;This one is quite useful in case you want to find largest files in your home directory, files that are eating away space on hard drive. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Find all the  files between 10 MB - 100 MB&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;find /home -size +10M -size -100M
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Find all the files larger then 1GB and delete em&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#Find larger files and list them first&lt;/span&gt;
find /home -size +1G -exec ls -la &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;

&lt;span class="c1"&gt;# If you see desired files then remove them&lt;/span&gt;
find /home -size +1G -exec rm -rf &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Find all the movie files larger then 100MB and delete &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Find and list files first&lt;/span&gt;
find /home -size +100M -print -iname &lt;span class="s2"&gt;&amp;quot;*mp4|wmv|mov&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;# After listing them just press `UP` arrow, change the CMD and  delete &lt;/span&gt;
find /home -size +100M -iname &lt;span class="s2"&gt;&amp;quot;*mp4|wmv|mov&amp;quot;&lt;/span&gt; -exec rm -rf &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;span class="c1"&gt;#Be careful while executing that command.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Find supports extended regular expressions too. &lt;br /&gt;
Regular expressions are swiss army knife for solving many kind of problem but they also come with added difficulty of maintaining and generating them. If none&amp;gt; of the above meets your requirement then as last resort only you should use Re&amp;gt;gExes in &lt;code&gt;find&lt;/code&gt; utility.&lt;/p&gt;
&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Unixer</dc:creator><pubDate>Sun, 03 Jan 2010 18:02:00 +0530</pubDate><guid>tag:unixtech.github.io,2010-01-03:01-2010/practical-find.html</guid><category>Unix</category><category>Essentials</category></item></channel></rss>