<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Tech Architectures</title><link href="https://unixtech.github.io/" rel="alternate"></link><link href="https://unixtech.github.io/feeds/all-atom.xml" rel="self"></link><id>https://unixtech.github.io/</id><updated>2015-08-15T17:02:00+05:30</updated><entry><title>y super title</title><link href="https://unixtech.github.io/12-2015/mjy-super-post.html" rel="alternate"></link><updated>2010-12-05T19:30:00+05:30</updated><author><name>Unixer</name></author><id>tag:unixtech.github.io,2015-12-03:12-2015/mjy-super-post.html</id><summary type="html">&lt;p&gt;This is the content of my super blog post.&lt;/p&gt;</summary><category term="pelican"></category><category term="publishing"></category></entry><entry><title>Building Enterprize Mail server</title><link href="https://unixtech.github.io/08-2015/OpenSMTPD-as-Mail-server-1.html" rel="alternate"></link><updated>2015-08-15T17:02:00+05:30</updated><author><name>Unixer</name></author><id>tag:unixtech.github.io,2015-08-15:08-2015/OpenSMTPD-as-Mail-server-1.html</id><summary type="html">&lt;!--#OpenSMTPD--&gt;

&lt;h2&gt;Why?&lt;/h2&gt;
&lt;p&gt;Blaming mail server is very easy when your mail goes to SPAM or mail server doesn't work at all.&lt;/p&gt;
&lt;p&gt;Mail servers are so important in our lives that it's very hard to imagine life without them. They have outlived many systems such as Chat clients and Social Media netwoks - Still going ever stong.&lt;/p&gt;
&lt;h2&gt;Components used in&lt;/h2&gt;</summary><category term="Mail"></category><category term="Unix"></category></entry><entry><title>Central SSH Key management using CA</title><link href="https://unixtech.github.io/12-2014/Central-SSH-key-management-CA-1.html" rel="alternate"></link><updated>2014-12-15T13:02:00+05:30</updated><author><name>Unixer</name></author><id>tag:unixtech.github.io,2014-12-15:12-2014/Central-SSH-key-management-CA-1.html</id><summary type="html">&lt;p&gt;&lt;img class="center" src="/images/openssh.gif" width="600"&gt;&lt;/p&gt;
&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;It's always challenge in itself to handle SSH private keys, Managing authentication ( Without-password ) and keeping it upto date. Things like taking control of the keys plus revoking the keys as needed is formidable challenge for any senior admin.&lt;br /&gt;
One can do it via traditional &lt;code&gt;authorized_keys&lt;/code&gt; file but overtime it becomes messy to maintain and more prone to errors. This becomes all the more important when you can't handle key management to you users whom you deem undesirable to be able to comprehend . &lt;/p&gt;
&lt;p&gt;So, Decided to move to CA based authentication with OpenSSH with OpenLDAP. In this part we will cover just CA based key management later parts we will do it with OpenLDAP integration and how does one maintain the whole ssh keys management via ansible.  &lt;/p&gt;
&lt;p&gt;It doesn't really matter which methods you adopt as long as you have prior policy to deal with regular management of keys.  &lt;/p&gt;
&lt;h2&gt;Lab Topology&lt;/h2&gt;
&lt;p&gt;&lt;img class="center" src="/images/sshca_topology1.png" width="600"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CA server will only be used to generate CA key and Sign and generate certificates for public keys that you have received from various users.  &lt;/p&gt;
&lt;p&gt;Remember: At no point in time private key of user is supposed to leave his/her computer, Only public keys are required to generate certs. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Configure Host certificates&lt;/h2&gt;
&lt;p&gt;Utility: &lt;code&gt;ssh-keygen&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We will start by configurign our host certificates. Host certificates replaces public keyfiles of users's know_host files.  It will replace it with CA's public key in users known_host file.&lt;br /&gt;
To avoid confusion here are the files required on various machines for Host certificates.  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Machine&lt;/th&gt;
&lt;th&gt;Files&lt;/th&gt;
&lt;th&gt;Purpose&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CA&lt;/td&gt;
&lt;td&gt;CA Private KEY ( server_ca ) - Hosted&lt;/td&gt;
&lt;td&gt;For signing certificate that will certify the host's authenticity&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;CA Public KEY (server_ca.pub)&lt;/td&gt;
&lt;td&gt;This will go to every host that we want to trust this CA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Client&lt;/td&gt;
&lt;td&gt;known_hosts&lt;/td&gt;
&lt;td&gt;Only file that changes on client, Here the file &lt;code&gt;server_ca.pub&lt;/code&gt; will come as &lt;code&gt;@cert-authority&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Server&lt;/td&gt;
&lt;td&gt;sshd_config&lt;/td&gt;
&lt;td&gt;Server's sshd_config file will be changed with appropriate configuration for that server to 'trust' that particular &lt;b&gt;authority&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: Don't confuse &lt;code&gt;Server&lt;/code&gt; and &lt;code&gt;Client&lt;/code&gt; here, they interchangeable terms, Mostly depends upon where you need authentication done. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Generate CA keys&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="c"&gt;#Generate CA for our infrastructure.&lt;/span&gt;
 ssh-keygen -f server_ca
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now You should have two files in your CWD.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="c"&gt;#!sh&lt;/span&gt;
 ls
 server_ca  server_ca.pub
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Signing Host keys&lt;/h3&gt;
&lt;p&gt;Now that we have our CA keys, We can sign our host keys. &lt;/p&gt;
&lt;h4&gt;Example:&lt;/h4&gt;
&lt;p&gt;Start by signing any example key for trial:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; ssh-keygen -s server_ca.pub -I &lt;span class="s2"&gt;&amp;quot;Identifier&amp;quot;&lt;/span&gt; -h -n &lt;span class="s2"&gt;&amp;quot;HOST_NAME&amp;quot;&lt;/span&gt; -V +52w host_rsa_key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's have look at what each of these options means:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;-s&lt;/th&gt;
&lt;th&gt;Private key of CA that we just created &lt;code&gt;server_ca&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-h&lt;/td&gt;
&lt;td&gt;Generate certificate for host as oppose to client&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary><category term="Security"></category><category term="SSH"></category></entry><entry><title>my super titsle</title><link href="https://unixtech.github.io/12-2010/mys-super-p2ost.html" rel="alternate"></link><updated>2010-12-05T13:30:00+05:30</updated><author><name>Unixer</name></author><id>tag:unixtech.github.io,2010-12-03:12-2010/mys-super-p2ost.html</id><summary type="html">&lt;p&gt;FDF&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;p&gt;This is the content of my super blog post.1
We will be witnessing such thing is unimaginable to me.&lt;/p&gt;
&lt;figure class='code'&gt;
&lt;figcaption&gt;&lt;span&gt;"Super_cipher" hello1.py&lt;/span&gt; &lt;a href='/static/code/hello1.py'&gt;download&lt;/a&gt;&lt;/figcaption&gt;

&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/python3&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;/figure&gt;

&lt;p&gt;&lt;img class="center" src="/images/2.png" width="600"&gt;&lt;/p&gt;
&lt;p&gt;Title 2&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Relevant inline math&lt;/strong&gt;: &lt;code&gt;$&lt;/code&gt;e=mc^2&lt;code&gt;$&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;The area of a circle is :math:`A_\text{c} = (\pi/4) d^2`.
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;math&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;
  α_t(i) = P(O_1, O_2, … O_t, q_t = S_i λ)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;$&lt;/code&gt;x^2&lt;code&gt;$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\begin{equation}&lt;/code&gt; \label{eq} X^2 &lt;code&gt;\end{equation}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$&lt;/code&gt;X^2 over \pi&lt;code&gt;$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$&lt;/code&gt;\ref{eq}&lt;code&gt;$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;\&lt;span class="math"&gt;\(\\alpha = 10^2\\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;math&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;
\alpha = 10^2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;$$&lt;/code&gt; \alpha = 10^2 &lt;code&gt;$$&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;Haal&lt;/h1&gt;
&lt;p&gt;This is best one yet&lt;/p&gt;
&lt;p&gt;As of now Math Render is not working as expected just inquire down as to what has happened to it, If not for now then later on&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ALT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$\alpha$&lt;/code&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }
    
    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript'; 
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'blue ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="pelican"></category><category term="publishing"></category></entry></feed>