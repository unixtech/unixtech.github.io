{"pages":[{"url":"http://unixtech.github.io/pages/about.html","title":"About Unixer","text":"Hi, I am Unixer I study popular tech across wide range of spectrums - Programming languages, Graphical illustrations and more. In doing so I try to uncover some of the best practices of doing certain things. Here, I share it with world! By being here You can expect to learn on Programming 'stuff' Data science Various spectrums of HuTech Have a word with me @: Unixer","tags":"pages"},{"url":"http://unixtech.github.io/pages/contact-me.html","title":"Contact me","text":"This is my Contact me page Contact 2 1","tags":"pages"},{"url":"http://unixtech.github.io/presentation/presen1.html","title":"presentation titsle","text":"# Reveal.js presentation This is my first presentation using reveal.js THE END This too is part of it. $$x&#94;2$$ - Try the online editor - Source code & documentation We are timed out THE tart This too is part of it. $$x&#94;2$$ - Try the online editor - Source code & documentation We are timed out This is another one of those MDs Markdowns still, We are not sure of what to be done regarding this. MarkII We are trying to make sure all are safe via $$e=mc&#94;2$$ Either write in MD or HTML not both. if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); var location_protocol = (false) ? 'https' : document.location.protocol; if (location_protocol !== 'http' && location_protocol !== 'https') location_protocol = 'https:'; mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: '#333 ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('SansSerif' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_SansSerif');\" + \"VARIANT['bold'].fonts.unshift('MathJax_SansSerif-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_SansSerif-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_SansSerif-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_SansSerif');\" + \"VARIANT['bold'].fonts.unshift('MathJax_SansSerif-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_SansSerif-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_SansSerif-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"presentation"},{"url":"http://unixtech.github.io/presentation/presen2.html","title":"presentation2 titsle","text":"Reveal.js presentation This is my first presentation using reveal.js THE END This too is part of it. $$x&#94;2$$ - Try the online editor - Source code & documentation We are timed out THE tart This too is part of it. $$x&#94;2$$ - Try the online editor - Source code & documentation We are timed out This is another one of those MDs Markdowns still, We are not sure of what to be done regarding this. MarkII We are trying to make sure all are safe via $$e=mc&#94;2$$ Either write in MD or HTML not both. if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); var location_protocol = (false) ? 'https' : document.location.protocol; if (location_protocol !== 'http' && location_protocol !== 'https') location_protocol = 'https:'; mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: '#333 ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('SansSerif' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_SansSerif');\" + \"VARIANT['bold'].fonts.unshift('MathJax_SansSerif-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_SansSerif-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_SansSerif-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_SansSerif');\" + \"VARIANT['bold'].fonts.unshift('MathJax_SansSerif-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_SansSerif-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_SansSerif-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"presentation"},{"url":"http://unixtech.github.io/blog/12-2015/understanding-sql-1.html","title":"Relational Algebra - SQL","text":"In the age of ORMs so many developers today doesn't know about very fundamental and basic algorithms that runs SQL. Despite being one of easiest and much useful language many people run away from using SQL directly and take shelter in using some 'wrapper' tool which is not always as good as raw SQL. Let's start by defining very basic relation in SQL. Database as Collection of relations ( Tables or Schemas ) Being first class predicate - State of database is final state of all relations By joining , aggregating data from different relations one can filter out data as desired. Relation Relation in SQL language is defined by several terms. Tuple One Row in SQL Relation Attribute Column in Relation Unknown Null in Domain Note:- Tuple is represented by (a, b), Attribute(Column) here will have unique domain(name - Relation name) within relation. Relational Algebra Relational algebra is superset of set algebra which defines formal language of relations in Database domain. Each operation done here on relations will return new valid Relation. This algebra has mainly two groups of operations, One it shares with set theory and other one is specific to Relational model. SET operations Relation specific operations 1 UNION SELECT 2 INTERSECTION PROJECT 3 SET DIFFERENCE 4 CARTESIAN PRODUCT \\ CROSS PRODUCT Any operations in Relational algebra can be classified mathematically as binary and unary, this fundamental operators have all the power needed to construct complex queries as needed. The main operators are: SELECT ( \\(\\sigma\\) ) Can be described as below $$ \\sigma_\\psi RO $$ Where: R Tupels sets in SQL \\(\\psi\\) Predicate in selection retries from Tuples in R PROJECT ( \\(\\pi\\) ) Operation which returns columnar structure in vertical dimention, If you remember this is slicing by attributes can be described as $$ \\pi_{a1,a2...an} RO $$ \\(_{a1,a2..an}\\) are set of attributes names. CARTESIAN\\CROSS PRODUCT ( \\(\\times\\) ) This is binary operation as oppose to unary like previous two, Can be used to generate complex relations by joining each tuple operands together. \\(R \\times S = {r1, r2...rn,s1,s2...sn}\\) UNION ( \\(\\cup\\) ) Appends two relations together. To be successful in this binary operations both relation needs to have same set of attributes. $$ R \\cup S = (_{r1, r2...rn}) \\cup (_{s1, s2...sn}) $$ Assuming, \\(S \\, \\Sigma \\, (_{s1,s2...sn}) \\quad and \\quad R \\, \\Sigma \\, (_{r1,r2...rn})\\) DIFFERENCE ( \\(\\setminus or \\, -\\) ) A binary operation, as you may have guessed - \\(\\cup\\) only but in reverse. Set difference can be described as $$ R\\setminus S = (_{r1,r2...rn}) \\quad where \\quad (_{r1,r2...rn}) \\, \\Sigma\\, R \\quad but \\quad (_{r1,r2...rn}) \\, \\notin \\, S $$ REMAME( \\(\\rho\\) ) A unary operation that works on attributes and returns new value of attribute, This is mainly used for JOIN operations to differantiate the attributes, can be expressed as $$ \\rho_{a\\setminus b}R$$ With this essential building blocks in place we can now move forward and take a look at more complex queries such as mixing many of these premitives to perform left joins , right-joins etc. In addition to these we can also add few more such as sum , multiplication to these operations on set of tuples or attributes. These algebric math provides fundamental building block of any SQL algorithm which guarantess ACID standards are followed hence understanding them all the more important. if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var align = \"center\", indent = \"0em\", linebreak = \"false\"; if (false) { align = (screen.width < 768) ? \"left\" : align; indent = (screen.width < 768) ? \"0em\" : indent; linebreak = (screen.width < 768) ? 'true' : linebreak; } var mathjaxscript = document.createElement('script'); var location_protocol = (false) ? 'https' : document.location.protocol; if (location_protocol !== 'http' && location_protocol !== 'https') location_protocol = 'https:'; mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: '\"+ align +\"',\" + \" displayIndent: '\"+ indent +\"',\" + \" showMathMenu: true,\" + \" messageStyle: 'normal',\" + \" tex2jax: { \" + \" inlineMath: [ ['\\\\\\\\(','\\\\\\\\)'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: '#333 ! important'} },\" + \" linebreaks: { automatic: \"+ linebreak +\", width: '90% container' },\" + \" }, \" + \"}); \" + \"if ('SansSerif' !== 'default') {\" + \"MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_SansSerif');\" + \"VARIANT['bold'].fonts.unshift('MathJax_SansSerif-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_SansSerif-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_SansSerif-italic');\" + \"});\" + \"MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {\" + \"var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;\" + \"VARIANT['normal'].fonts.unshift('MathJax_SansSerif');\" + \"VARIANT['bold'].fonts.unshift('MathJax_SansSerif-bold');\" + \"VARIANT['italic'].fonts.unshift('MathJax_SansSerif-italic');\" + \"VARIANT['-tex-mathit'].fonts.unshift('MathJax_SansSerif-italic');\" + \"});\" + \"}\"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"Server"},{"url":"http://unixtech.github.io/blog/06-2015/avoid-doing-interviews-1.html","title":"Interviewer's Gaffe-1","text":"Plight of every Interviewer","tags":"Art"},{"url":"http://unixtech.github.io/blog/12-2014/pf-firewall-1.html","title":"PF Firewall-1","text":"FreeBSD and OpenBSD PF (Packet filter) is default firewall for OpenBSD and included in other OS's like FreeBSD and Apple IOS operating systems. Many other \"Commercial firewall\" appliances are inspired by PF. History of PF PF was originally designed as replacement for Darren Reed's IPFilter, from which it derives much of its rule syntax. IPFilter was removed from OpenBSD's CVS tree due to OpenBSD developers' problems with its license. Specifically, Reed distributed some versions of his software with the license clause, \"Derivative or modified works are not permitted without the author's prior consent.\" Due to this, the OpenBSD team decided to replace the software. This decision became the subject of wrangling among the parties involved, degenerating into a discussion that failed to reach mutual understanding. On the subject, OpenBSD project leader Theo de Raadt wrote, \"Software which OpenBSD uses and redistributes must be free to all... for any purpose including... modification.\" PF has since evolved quickly and now has several advantages over other available firewalls. Network Address Translation (NAT) and Quality of Service (QoS) have been integrated into PF, QoS by importing the ALTQ queuing software and linking it with PF's configuration. Features such as pfsync and CARP for failover and redundancy, authpf for session authentication, and ftp-proxy to ease firewalling the difficult FTP protocol, have also extended PF. One of the many innovative feature is PF's logging. Logging is configurable per rule within the pf.conf and logs are provided from PF by a pseudo-network interface called pflog. Logs may be monitored using standard utilities such as tcpdump, which in OpenBSD has been extended especially for the purpose, or saved to disk in a modified tcpdump/pcap binary format using the pflogd daemon. For more info, Read - History of pf PF setup Usually PF is deployed in conjuction with other tools provided by OpenBSD ecosystem. These includes: HFSC Queuing system for QoS FTP-Proxy Application proxies such as Relayd ( Mainly used as HTTPs termination point ) OS detection using fingerprint - pf.os * CARP firewall failover for HA environments ( UCARP for FreeBSD users ) How to deploy PF firewall in your environment Note: Both OpenBSD and FreeBSD OS uses different syntax for maintaining PF firewall. We will mainly focus on OpenBSD OS but there are benefits of using PF with FreeBSD OS since it provides multi-processing capable version of PF . File - /etc/rc.conf.local pf = YES pf_rules = /etc/pf.conf pflogd_flags = \"-s 1500\" # Ex. Snaplen, Log filename File - /etc/pf.conf ### My master pf.conf ### Interfaces EXTIF = \"em0\" INTIF = \"em1\" DMZ = \"em2\" EXTRAIF = \"em3\" ### Hosts ADMIN = \"10.0.11.1\" ADMIN1 = \"10.0.11.31\" BOTHADMIN = \"{\" $AD MIN $AD MIN1 \"}\" EXTDNSSERVER = \"4.2.2.2\" INTDNSSERVER = \" $ INTIF:0\" #DNSSERVERS =\"{' $INTDNSSERVER $EXTDNSSERVER '}\" DNSSERVER = \"{ $ INTDNSSERVER}\" LOGSERVER = \"{ 10.0.11.22, 10.0.11.31 }\" All these variable defined are called MACROS inside pf.conf file. These are used for convinience and ease of use Defining nested macros are possible as well. Take a look at INTIF macro, If you want to include that whole internal network in your rules then INTIF:network in your rule. Now, We will have a look at some of the rules itself. #External Interface #Block all on External interface block log on $E XTIF ## Network address translation with outgoing source #match out log on $EXTIF from $INTIF to any received-on $INTIF tag EGRESS nat-to ($EXTIF:0) match out log on $E XTIF from $INTIF:network to any received-on $INTIF tag EGRESS nat-to ( $E XTIF:0 ) #If you have difficulties with any box with static port forwarding then you should use #match out log on $EXTIF from $INTIF to any received-on $INTIF tag EGRESS nat-to ($EXTIF:0) static-port #Traffic generated from firewall it self will be tagged as EGRESS match out log on $E XTIF from $E XTIF to any tag EGRESS #More on these later on. #EXTIF inbound pass in log ( to pflog1 ) on $E XTIF inet proto tcp from any to any port 22 pass in on $E XTIF inet proto tcp from any to $E XTIF port >10000 #External interface outbound pass out log on $E XTIF inet from ( $E XTIF ) to any $TCPSTATE $E XTIFSTO queue ( bulk, ack ) tagged EGRESS #pass out log on $EXTIF inet proto udp from ($EXTIF) to any $UDPSTATE $EXTIFSTO queue (bulk, ack) tagged EGRESS pass out log on $E XTIF inet proto tcp from ( $E XTIF ) to any port $TCPPORTS $TCPSTATE $E XTIFSTO queue ( web, ack ) tagged EGRESS pass out log on $E XTIF inet proto udp from ( $E XTIF ) to any port 53 $UDPSTATE $E XTIFSTO queue ( dns, ack ) tagged EGRESS These are some of the rules that I have defined in my DMZ firewall to prevent other users from coming in from outside. After deploying this ruleset only SSH is allowed from outside interface of firewall. From inside essential end-user services such as Internet browsing, DNS are enabled. Take a look at match out rules on EXTIF to have a look at how nat rules are working. Turning on routing To turn on routing functionality of the box, You need to make sure you have enabled ip forwarding in sysctl # To check the ip forwarding status sysctl net.inet.ip.forwarding # If it's 0 then turn it on sysctl net.inet.ip.forwarding = 1 #To make it permanent ### /etc/sysctl.conf net.inet.ip.forwarding = 1 PFCTL utility After making changes inside pf.conf file, rules are not automatically loaded. To load the rules We need to use pfctl To load rules - Assuming rule file is /etc/pf.conf pfctl -vf /etc/pf.conf To see which rules are currently loaded, It will also show related counters. pfctl -vsr Conclusions PF is one of the most popular and powerful firewall for managing your network traffic. We have barely even scratched surface of what PF can provide. It's functionality is much more then many of the commercial offerings offers. We will also cover some extended functionality such as usage of Anchors, Preventing torrent traffic, Blacklisting and preventing brute-forcing attack etc. Being open-source it places no restrictions on usage. Users can use it any which way they would prefer. Having used PF and OpenBSD for nearly 10 years in all of my setups I can say PF is most secure firewall there is and With combination of OpenBSD and PF you can be pretty sure you are one step ahead then rest in process of being NSA proof. var CommentBox = React.createClass({ render: function() { return ( <div className=\"commentBox\"> Hello, world! I am a CommentBox. </div> ); } }); ReactDOM.render( <CommentBox />, document.getElementById('comment') );","tags":"Unix"}]}